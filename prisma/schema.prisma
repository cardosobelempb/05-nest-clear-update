// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(uuid())
  name        String
  email       String       @unique
  password    String
  phone       String
  isActive    Boolean      @default(true)
  times       Time[]
  services    Service[]
  appontments Appontment[]
  categories  Category[]

  @@map("users")
}

model Time {
  id        String    @id @default(uuid())
  name      String
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id])

  appontments Appontment[]

  @@map("times")
}

model Service {
  id        String    @id @default(uuid())
  name      String
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id])

  appontments Appontment[]

  @@map("services")
}

model Category {
  id        String    @id @default(uuid())
  name      String
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id])

  @@map("categories")
}

model Appontment {
  id        String    @id @default(uuid())
  status    String    @default("agendado")
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id])

  timeId String? @map("time_id")
  time   Time?   @relation(fields: [timeId], references: [id])

  serviceId String?  @map("service_id")
  service   Service? @relation(fields: [serviceId], references: [id])

  @@map("appontments")
}
